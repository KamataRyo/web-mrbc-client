{"version":3,"sources":["main.js"],"names":[],"mappings":"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","file":"web-mrbc-client.js","sourcesContent":["const endpoint = 'http://web-mrbc.wakayamarb.org'\n// eslint-disable-next-line no-undef\nangular\n    .module('web-mrbc-client', [\n        'ngRoute'\n    ])\n    .config([\n        '$locationProvider',\n        '$routeProvider',\n        ($locationProvider, $routeProvider) => {\n            $locationProvider.html5Mode(false)\n\n        // return $routeProvider.when('/', {\n        //   templateUrl: 'view/'\n        // })\n        }\n    ])\n    .directive('fileReader', () => {\n        return {\n            restrict: 'A',\n            link: (scope, element, attrs) => {\n                var getCompiledFileName = (filename) => {\n                    var elements = filename.split('.')\n\n                    if (elements[elements.length - 1] === 'rb') {\n                        elements[elements.length - 1] = 'mrb'\n                        return elements.join('.')\n                    } else {\n                        return filename + '.mrb'\n                    }\n                }\n\n                return element.on('change', (event) => {\n                    var limit = 100000 // 100kb\n                    scope.log = undefined\n                    scope.$apply()\n                    // file detected\n                    var file = event.target.files[0]\n\n                    if (file.size > limit) {\n                        event.target.files = null\n                        scope.log = ('Too large file. Size is limit upto ' + (limit) + '.')\n                        scope.fileName = ''\n                        return\n                    }\n\n                    scope.fileName = file.name\n                    scope.compiledFileName = getCompiledFileName(file.name)\n                    scope.$apply()\n                    var fileReader = new FileReader()\n                    // set me as source and enable upload(download)\n\n                    fileReader.onload = (e) => {\n                        scope.fileContent = fileReader.result\n                        return scope.$apply()\n                    }\n\n                    return fileReader.readAsText(file)\n                })\n            }\n        }\n    })\n    .controller('tabCtrl', [\n        '$scope',\n        '$location',\n        '$http',\n        '$httpParamSerializer',\n        ($scope, $location, $http, $httpParamSerializer) => {\n            // initialize tab states\n            $scope.fileUploadActive = 'active'\n            $scope.directInputActive = 'inactive'\n            $scope.fromURLActive = 'inactive'\n            $scope.active = 'fileUpload'\n\n            // initialize options\n            $scope.bytecodeFormats = [{\n                version: 3,\n                label: 'Ver.0003 (default)'\n            }, {\n                version: 2,\n                label: 'Ver.0002'\n            }]\n\n            $scope.bytecodeFormatVersion = $scope.bytecodeFormats[0].version\n\n            // select to toggle tabs\n            $scope.select = (selection) => {\n                $scope.log = undefined\n                $scope.fileUploadActive = 'inactive'\n                $scope.directInputActive = 'inactive'\n                $scope.fromURLActive = 'inactive'\n                $scope[selection + 'Active'] = 'active'\n                $scope.active = selection\n                return $location.hash(selection)\n            }\n\n            // client side routing\n            var hash = $location.hash()\n            console.log($location)\n\n            if (hash !== '') {\n                $scope.select(hash)\n            }\n\n            // make request and download binary\n            return $scope.download = () => {\n                var query\n                $scope.log = undefined\n\n                var arg = {\n                    version: $scope.bytecodeFormatVersion,\n                    options: $scope.options\n                }\n\n                switch ($scope.active) {\n                case 'fileUpload':\n                    arg.type = 'source'\n                    arg.content = $scope.fileContent\n                    break\n                case 'directInput':\n                    arg.type = 'source'\n                    arg.content = $scope.source\n                    break\n                case 'fromURL':\n                    arg.type = 'url'\n                    arg.content = $scope.urlContent\n                    break\n                default:\n                    $scope.log = 'Invalid Operation.'\n                    return\n                }\n\n                if (arg.content === '' || !(arg.content != null)) {\n                    return $scope.log = 'Content required'\n                } else {\n                    query = ((endpoint) + '?') + $httpParamSerializer(arg)\n                    return alert('make request to ' + query)\n                }\n            }\n        }\n    ])\n"],"sourceRoot":"/source/"}